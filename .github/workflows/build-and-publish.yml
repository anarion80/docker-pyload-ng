name: Build and Publish

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:
    inputs:
      version:
        description: 'New pyload version'
        required: false
        default: "No_version"
        type: string

jobs:
  # define job to build and publish docker image
  build-and-push-docker-image:
    name: Build Docker image and push to repositories
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest

    # set matrix to run on two branches
    strategy:
      matrix:
        branch: ["main", "develop"]

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # setup Docker buld action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USR }}
          password: ${{ secrets.DOCKER_HUB_PW }}

      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            docker.io/anarion/pyload-ng
            ghcr.io/anarion80/pyload-ng
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable=${{ matrix.branch == 'main' }}
            type=raw,value=${{ github.event.inputs.version }}
            type=raw,value=${{ matrix.branch }}

      - name: Build image and push to Docker Hub and GitHub Container Registry
        uses: docker/build-push-action@v3
        with:
          context: .
          build-args: |
            BRANCH=${{ matrix.branch }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
